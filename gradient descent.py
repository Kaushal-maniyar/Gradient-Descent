import matplotlib.pyplot as plt
import numpy as np
n = np.array([19.492404440197316, 39.124302304145175, 78.71543461208236, -52.8293455656668, 23.09585947982234, 43.661300963097105, 45.18337366730687, 53.397946640989225, -14.498511771637979, 11.636125314446534, -2.9633586618876855, -51.56896373800971, -17.423856321678073, 14.108487479112114, -86.83852429033807, 29.954356189152804, 31.93453838885933, 115.17003034313282, 129.19337096565457, 8.838107723257723, 5.599735806097069, 52.207006297197466, -63.09250065217811, 7.387007879211881, 5.393198391752079, -53.4702120006149, 13.849852879644631, 36.333391998172274, -22.974649159411143, -46.05892793222407, 21.23795951665344, 2.836326215471697, -32.40354011188193, 34.06451984562264, 59.640437578404224, 33.34419074922703, 98.26949680179533, -9.2189125567516, 57.796904205789865, -14.658886299463909, -0.4369856786547345, 31.52653329077941, -0.9307438939533462, -53.57228431777706, -108.75970936956934, 4.57986205297468, 20.307987352155244, 18.62301469107195, 2.385627105279746, -49.94158038999962, 13.392565712081797, -11.817433260702263, -32.71845371601803, 88.61905694097179, 14.796432080311513, 64.71699388256728, -24.70545569363851, -2.5393383764665733, 35.972933483372586, 79.80340233590411, 0.18328527449309348, 34.33327169055165, -14.280040917974041, -34.04776071733737, -91.77540430402522, 12.500198152372771, 17.779314214222687, 33.07646319005759, 4.086617332016832, 73.68619308552127, -83.50368908425531, 97.41627780116383, 30.211286911832026, -34.5667319685061, -28.897833018187374, -34.29717434430043, -83.88214534517601, 6.269256370677277, 31.529968958382753, -37.96822078112429, 104.248989194759, -79.26688532736098, -13.754534130186261, 33.99222018524984, -5.146748330738282, -41.64806701917556, -34.681297891945505, 59.03697268482963, -37.98380746050284, 51.91781388206624, -56.16582909854012, 27.551229096250186, 51.16593130957644, -48.01790900931634, -143.86559703001353, 8.984586666231897, 69.31777993280112, 32.170906401169965, 91.58055617851734, 99.90190330983987, 15.359485609343565, 0.029735539940055768, -17.130726446988174, 79.70363135449138, 4.765923556140188, -38.01242351285068, -27.992865282832042, -100.19890943036079, -63.48426017969167, 68.44873535569904, 30.252056600909565, -44.34089439818324, -7.990224316497553, 75.9382573682198, 82.6102726897332, -62.83228519816534, 58.20084331968979, 38.01607399111891, -56.49641533564118, -18.989960947261586, -5.522602477305194, -43.44298947648829, -15.664240087392942, -8.003747296653268, 7.345219925909846, 44.234320539285925, 39.17372550347112, 27.48063882143959, -43.89940609108546, 49.56206536078179, -31.325982094112153, -26.358301267403757, 88.91218993876781, 41.97131617289138, -24.645621145079716, -9.503864023605288, -9.38735246525536, -59.950067006302675, 55.14727415411001, -21.250232774064905, -38.6041983602681, 13.705136457523203, -62.599366376229305, 7.689046551323685, -114.74280036798706, 29.13329578175883, -33.77152774116554, -29.916480334993505, -9.985300983706901, -17.098328440723336, 92.08346430605603, -54.51837553614662, -1.9637605687087594, 114.46292993922302, -16.768600170473768, -30.879786470948957, -29.254548460723655, 36.05993460157034, -12.852687985513455, 43.16304274332621, 69.33124766293764, 17.072012631906393, 34.11935916066785, 47.32519041434575, 33.8508059293661, 18.912366147065125, 69.81295329738776, 115.3679717185075, 40.21045270643601, -35.18273582055058, 46.14028408323957, 55.29949729599859, -42.02299409770079, -38.65749561850381, -28.152198441259273, 3.882306823607869, -0.4541480347369265, -56.58634711075391, -4.707912629426762, 28.177513761451696, -64.30864053707799, 8.50528280614048, -26.088037191356133, -33.999277783640956, -58.99068933298035, -131.85355467738478, 35.089395130154784, 25.828705283184977, -55.22780350059598, 15.368084938737736, -33.24329435367919, -20.541598020057382, -35.02356865010051, -6.176986536454389, -0.7357879948354468, 25.872043874626137, 13.678326094518894, 10.177258412439446, -110.75286665308761, -72.09527456485031])
y_mul = []
for i in range(200):
    t1 = 1.5 * i
    t2 = 3.5 * (i*2)
    y_mul.append(t1 + t2 + 10 + n[i])
# print(y_mul)

# plt.scatter(range(200), y_mul)
# plt.show()

# linear
b0 = 0
b1 = 0
b2 = 0
db0 = 0
db1 = 0
db2 = 0
y_mul_pre = []
SSE = 0
for i in range(200):
    t1 = b1 * i
    t2 = b2 * (i*2)
    y_mul_pre.append(t1 + t2 + b0)
    error = y_mul[i] - y_mul_pre[i]
    SSE = SSE + (error ** 2)
    db0 = db0 + error

    db1 = db1 + (error * i)
    # print(f"db1 {i} :", error * i)
    db2 = db2 + (error * i*2)

db0 = db0 * (-2/len(y_mul))
# print("db0 : ", db0)
db1 = db1 * (-2/len(y_mul))
# print("db1 : ", db1)
db2 = db2 * (-2/len(y_mul))
# print("db2 : ", db2)

MSE_mul = SSE / 200
# print("MSE : ", MSE_mul)
alpha = 0.00001
new_MSE_mul = 0

# for i in range(1000):
while True:
    y_mul_pre = []
    SSE = 0
    new_b0 = b0 - (alpha * db0)
    # print("step b1 : ", - (alpha * db1))
    # print("new_b0 :", new_b0)
    new_b1 = b1 - (alpha * db1)
    # print("new_b1 :", new_b1)
    new_b2 = b2 - (alpha * db2)
    # print("new_b2 :", new_b2)
    db0 = 0
    db1 = 0
    db2 = 0
    for i in range(len(y_mul)):
        t1 = new_b1 * i
        t2 = new_b2 * (i*2)
        y_mul_pre.append(t1 + t2 + new_b0)
        error = y_mul[i] - y_mul_pre[i]
        SSE = SSE + (error ** 2)
        db0 = db0 + error
        db1 = db1 + (error * i)
        db2 = db2 + (error * i*2)
    new_MSE_mul = SSE / 200
    db0 = db0 * (-2 / len(y_mul))
    # print("db0 : ", db0)
    db1 = db1 * (-2 / len(y_mul))
    # print("db1 : ", db1)
    db2 = db2 * (-2 / len(y_mul))
    # print("db2 : ", db2)
    # print("New MSE : ", new_MSE_mul)
    if new_MSE_mul < MSE_mul:
        b0 = new_b0
        b1 = new_b1
        b2 = new_b2
        MSE_mul = new_MSE_mul
    else:
        break

print("New B0 :", b0)
print("New B1 :", b1)
print("New B2 :", b2)